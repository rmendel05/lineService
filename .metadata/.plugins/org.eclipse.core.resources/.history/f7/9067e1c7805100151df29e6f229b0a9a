package com.rmendel.lineManager.service;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import com.rmendel.framework.ResponseLogEntry;
import com.rmendel.lineManager.api.QuerySpecDto;
import com.rmendel.lineManager.api.QuestionDto;
import com.rmendel.lineManager.api.QuestionResponseDto;
import com.rmendel.lineManager.application.Question;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiImplicitParams;
import com.wordnik.swagger.annotations.ApiImplicitParam;
import com.wordnik.swagger.annotations.ApiOperation;

@Path("/lineService")
@Api(value = "question")
public final class LineService {
	
	 @GET
	 @Path("/line/{lineNumber}")
	 @ApiOperation(value = "Returns the line at position [lineNumber] from the service data file",
	 	response = String.class)	 
	 @ApiImplicitParams(
		{@ApiImplicitParam(name = "lineNumber", value = "Line id", required = true, dataType = "int", paramType = "path")})
	 @Produces(MediaType.APPLICATION_JSON)
	 public String getLine(@PathParam("lineNumber") int lineNumber) {
		 
		 try(ResponseLogEntry<QuestionResponseDto> logEntry = 
				 new ResponseLogEntry<QuestionResponseDto>("LineService.getQuestion")) {
	
			 try {
				 QuestionDto result = Question.getObjectDtoByID(id);
				 logEntry.setResponse(new QuestionResponseDto(true, result));
				 
			 } catch(Exception e) {
				 logEntry.setResponse(new QuestionResponseDto(e));
				 logEntry.setException(e);
			 }

			 return logEntry.getResponse();
		 }
	 }
}
